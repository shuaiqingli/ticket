<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hengyu.ticket.dao.AdminDao">
	<select id="findShiftListForBalanceTicketWarn" resultType="java.util.HashMap">
		select t1.ID, t1.ShiftCode, t1.RideDate from shift t1
		LEFT JOIN line_manage t2 on t1.LMID=t2.ID
		LEFT JOIN ticket_store t3 on t1.ID=t3.ShiftID
		where t1.RideDate >= date(now()) and t3.ID is not NULL and t2.BalanceTicketWarn > 0 and t3.BalanceQuantity <![CDATA[ <= ]]> t2.BalanceTicketWarn
		and t2.ID in
		<foreach collection="lmidList" item="lmid" open="(" close=")" separator=",">
			#{lmid}
		</foreach>
		<if test="shiftIDList != null">
			and t1.ID not in 
			<foreach collection="shiftIDList" item="shiftID" open="(" close=")" separator=",">
				#{shiftID}
			</foreach>
		</if>
	</select>

	<select id="findAdminTotalForBindCustomer" resultType="long">
		select count(1)
		<include refid="findAdminListForBindCustomer_where"/>
	</select>

	<select id="findAdminListForBindCustomer" resultMap="result_map">
		select *
		<include refid="findAdminListForBindCustomer_where"/>
		limit #{page.startOfPage},#{page.pageSize}
	</select>

	<sql id="findAdminListForBindCustomer_where">
		from admin t1 LEFT JOIN customer t2 on t1.UserID=t2.UserID where t2.CID is null and (t1.IsDel is null  or t1.IsDel = 0)
		<if test="keyword != null">
			  and ( t1.UserID LIKE CONCAT('%',#{keyword},'%') or t1.RealName LIKE CONCAT('%',#{keyword},'%') or t1.Mobile LIKE CONCAT('%',#{keyword},'%') )
		</if>
	</sql>

	<select id="findAdminDataTotal" resultType="long">
		select count(1) from
			(
			select t.*,group_concat(DISTINCT t4.LineID ORDER BY t4.LineID SEPARATOR ',') as LineIDs from
				(select t1.*,group_concat(DISTINCT concat(IFNULL(t2.STName,''),'#',IFNULL(t4.CityName,'')) ORDER BY t4.CityName SEPARATOR ',') as StationNames from admin t1
				LEFT JOIN relation_station t2 on t1.UserID=t2.UserID
				LEFT JOIN city_station t3 ON t2.STID = t3.ID
				LEFT JOIN city_station t4 ON t3.ParentID = t4.ID
				GROUP BY t1.UserID
				) t
			LEFT JOIN admin_line t3 on t.UserID=t3.UserID
			LEFT JOIN line_manage t4 on t3.LMID=t4.ID
			GROUP BY t.UserID
			) t
		<if test="keyword != null">
			<where>
				UserID like concat('%',#{keyword},'%') or
				Mobile like concat('%',#{keyword},'%') or
				RealName like concat('%',#{keyword},'%') or
				LineIDs like concat('%',#{keyword},'%') or
				StationNames like concat('%',#{keyword},'%')
			</where>
		</if>
	</select>
	<select id="findAdminDataList" resultType="java.util.HashMap">
		select * from
			(
			select t.*,group_concat(DISTINCT t4.LineID ORDER BY t4.LineID SEPARATOR ',') as LineIDs from
				(select t1.*,group_concat(DISTINCT concat(IFNULL(t2.STName,''),'#',IFNULL(t4.CityName,'')) ORDER BY t4.CityName SEPARATOR ',') as StationNames from admin t1
				LEFT JOIN relation_station t2 on t1.UserID=t2.UserID
				LEFT JOIN city_station t3 ON t2.STID = t3.ID
				LEFT JOIN city_station t4 ON t3.ParentID = t4.ID
				GROUP BY t1.UserID
				) t
			LEFT JOIN admin_line t3 on t.UserID=t3.UserID
			LEFT JOIN line_manage t4 on t3.LMID=t4.ID
			GROUP BY t.UserID
			) t
		<if test="keyword != null">
			<where>
				UserID like concat('%',#{keyword},'%') or
				Mobile like concat('%',#{keyword},'%') or
				RealName like concat('%',#{keyword},'%') or
				LineIDs like concat('%',#{keyword},'%') or
				StationNames like concat('%',#{keyword},'%')
			</where>
		</if>
		order by `MakeDate`
		limit #{page.startOfPage},#{page.pageSize}
	</select>
	
	<delete id="delInvalidLineList">
		delete from admin_line where LMID not in
			(select LMID from line_manage_station t1,relation_station t2 where t2.UserID=#{userid} and t1.STID = t2.STID GROUP BY LMID)
		and LMID not in
			(select t1.ID from line_manage t1,relation_station t2 where t2.UserID=#{userid} and (t1.STStartID = t2.STID or
																									   t1.STArriveID = t2.STID) GROUP BY t1.ID)
		and UserID=#{userid}
	</delete>
	
	<select id="checkForBindLineToAdmin" resultType="long">
		select count(*) from line_manage t1
		LEFT JOIN admin_line t2 ON t1.ID=t2.LMID and t2.UserID=#{userid}
		where t2.ID is null and t1.ID=#{lineid}
	</select>
	<insert id="bindLineToAdmin">
		insert into admin_line(
		UserID, LMID
		)values(
		#{userid}, #{lineid}
		)
	</insert>
	<select id="getLineidListOfStationForBindAdmin" resultType="java.lang.Integer">
		select t3.ID from line_manage t3
		LEFT JOIN admin_line t4 on t3.ID=t4.LMID and t4.UserID=#{userid}
		where t4.ID is null and t3.ID in
		(select LMID from line_manage_station where STID=#{stationid} and Sort=0 GROUP BY LMID)
	</select>

	<delete id="unbindLineToAdmin">
		delete from admin_line where UserID=#{userid} and LMID=#{lineid}
	</delete>

	<select id="checkForBindStationToAdmin" resultType="java.util.HashMap">
		select t1.ID,t1.CityName,t1.ParentID from city_station t1
		LEFT JOIN relation_station t2 ON t1.ID=t2.STID and t2.UserID=#{userid}
		where t2.ID is null and t1.ParentID is not null and t1.ID=#{stationid}
	</select>
	
	<insert id="bindStationToAdmin">
		insert into relation_station(
		UserID, STID, STName, CityID
		)values(
		#{userid}, #{stationid}, #{stationname}, #{cityid}
		)
	</insert>

	<delete id="unbindStationToAdmin">
		delete from relation_station where UserID=#{userid} and STID=#{stationid}
	</delete>

	<insert id="save" parameterType="Admin">
		insert
		into
		admin
		(
		<include refid="columns" />
		)
		values
		(
		<include refid="propertys" />
		)
	</insert>
	<update id="update" parameterType="Admin">
		update
		admin
		set
		`UserID`=#{userID},
		`ParentID`=#{parentid},
		`RealName`=#{realName},
		`Mobile`=#{mobile},
		`Email`=#{email},
		`Password`=#{password},
		`Token`=#{token},
		`IsDel`=#{isDel},
		`IsAdmin`=#{isAdmin},
		`RoleID`=#{roleID},
		`MakeDate`=#{makeDate},
		`CityID`=#{cityId},
		`tcid`=#{tcid},
		`companyname`=#{companyname},
		`CityName`=#{cityName},
		`IsAutoBindLine`=#{isautobindline}
		where
		UserID=#{userID}
	</update>
	<select id="find" parameterType="java.lang.String" resultMap="result_map">
		select
		*
		from
		admin
		where
		UserID=#{userID}
	</select>
	<select id="findByMobilCheck" parameterType="java.lang.String"
		resultType="long">
		select
		count(1)
		from
		admin
		where
		Mobile=#{mobile}
	</select>
	<select id="findAdminList" resultMap="result_map" parameterType="Page">
		select
		a.*,r.RoleName
		from
		admin a
		left join
		role r
		on
		r.ID = a.RoleID
		<include refid="findAdminList_where"></include>
		order by 
			a.`MakeDate` 
		desc
		limit
		#{startOfPage},#{pageSize}
	</select>
	<select id="totalCount" resultType="long" parameterType="Page">
		select
		count(1)
		from
		admin a
		<include refid="findAdminList_where"></include>
	</select>
	<sql id="findAdminList_where">
		<where>
			<if test="param != null and param.realName != null">
				a.RealName like concat('%',#{param.realName},'%') or
				a.Mobile like concat('%',#{param.realName},'%') or
				a.userID like concat('%',#{param.realName},'%')
			</if>
		</where>
	</sql>
	<select id="login" parameterType="Admin" resultMap="result_map">
  	<![CDATA[
	  	select 
	  		* 
	  	from 
	  		admin a 
	  	where 
	  	
	  		 a.`Password` = #{password}
	  	and
	  		 (a.`Mobile`=#{mobile} or userID = #{mobile} )
	  	and
	  		(a.IsDel is null  or a.IsDel = 0)
  	]]>
	</select>
	<select id="getAPIStationLogin" parameterType="map" resultMap="result_map">
		select
		*
		from
		admin a
		where
		(a.Mobile=#{mobile[0]} or userID=#{mobile[0]}) and
		a.Password=#{password[0]} and IsDel = 0 
	</select>
	<update id="setToken" parameterType="map">
		update
		admin
		set
		Token=#{token} where Mobile=#{mobile}
	</update>
	<select id="getAdminByToken" parameterType="java.lang.String"
		resultMap="result_map">
		select
		*
		from
		admin
		where
		Token=#{token}
	</select>
	<sql id="admin_power_lines">
		select `id` from line_manage
		where tcid in(
				select tcid from admin where userID = #{admin.userID}
					or userID in
					(
						select userID from admin where ParentID = #{admin.userID}
					)
		)
	</sql>
	
	<update id="changePwd" parameterType="map">
		update
		admin
		set
		`password`=#{password},`IsChange`=${ischange} 
		where
		UserID=#{userid}
	</update>
	<sql id="columns">
		`UserID`,
		`ParentID`,
		`RealName`,
		`Mobile`,
		`Email`,
		`Password`,
		`Token`,
		`IsDel`,
		`IsAdmin`,
		`RoleID`,
		`MakeDate`,
		`CityID`,
		`tcid`,
		`companyname`,
		`CityName`,
		`IsChange`,
		`IsAutoBindLine`
	</sql>
	<sql id="propertys">
		#{userID},
		#{parentid},
		#{realName},
		#{mobile},
		#{email},
		#{password},
		#{token},
		#{isDel},
		#{isAdmin},
		#{roleID},
		#{makeDate},
		#{cityId},
		#{tcid},
		#{companyname},
		#{cityName},
		#{ischange},
		#{isautobindline}
	</sql>
	<resultMap id="result_map" type="Admin">
		<id column="UserID" property="userID" javaType="java.lang.String" />
		<result column="RealName" property="realName" javaType="java.lang.String" />
		<result column="Mobile" property="mobile" javaType="java.lang.String" />
		<result column="Email" property="email" javaType="java.lang.String" />
		<result column="Password" property="password" javaType="java.lang.String" />
		<result column="Token" property="token" javaType="java.lang.String" />
		<result column="IsDel" property="isDel" javaType="java.lang.Integer" />
		<result column="IsAdmin" property="isAdmin" javaType="java.lang.Integer" />
		<result column="ParentID" property="parentid" javaType="java.lang.String" />
		<result column="RoleID" property="roleID" javaType="java.lang.Integer" />
		<result column="tcid" property="tcid" javaType="java.lang.Integer" />
		<result column="companyname" property="companyname" javaType="java.lang.String" />
		<result column="MakeDate" property="makeDate" javaType="java.lang.String" />
		<result column="CityID" property="cityId" javaType="java.lang.String" />
		<result column="CityName" property="cityName" javaType="java.lang.String" />
		<result column="IsChange" property="ischange" javaType="java.lang.Integer" />
		<result column="IsChange" property="ischange" javaType="java.lang.Integer" />
		<result column="IsAutoBindLine" property="isautobindline" javaType="java.lang.String" />
		<association property="role" column="RoleID" resultMap="com.hengyu.ticket.dao.RoleDao.result_map"></association>
	</resultMap>

</mapper>
