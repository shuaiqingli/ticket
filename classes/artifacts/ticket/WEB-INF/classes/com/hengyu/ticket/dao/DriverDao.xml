<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hengyu.ticket.dao.DriverDao">
    <update id="updatePassword">
        update driver set Password=#{password} where ID=#{driverid}
    </update>

    <select id="findLineDataForDriverList" resultType="java.util.HashMap">
        select t1.DriverID,t1.Type,t2.id,t2.CityStartName,t2.CityArriveName from line_driver t1,line_manage t2
        where t1.GroupID=t2.GroupID
        <if test="driveridList != null">
            and t1.DriverID in
            <foreach collection="driveridList" open="(" close=")" separator="," item="driverid">
                #{driverid}
            </foreach>
        </if>
        GROUP BY t1.DriverID,t1.GroupID
    </select>
    <select id="findListByLineGroupID" parameterType="java.lang.String" resultType="java.util.HashMap">
        SELECT
            t.*,
            t3.PlateNum
        FROM
            (SELECT
                 t1.*,
                 t2.DName,
                 t2.DMobile,
                 t2.IDCard,
                 t2.IsStop
             FROM line_driver t1, driver t2
             WHERE t1.DriverID = t2.ID AND t1.GroupID = #{groupID}) t
            LEFT JOIN plate t3 ON t.PlateID = t3.ID
    </select>

    <select id="totalCountForBindLine" parameterType="Page" resultType="long">
        select count(1)
        <include refid="findListForBindLine_where"/>
    </select>

    <select id="findListForBindLine" parameterType="Page" resultMap="result_map">
        select *
        <include refid="findListForBindLine_where"/>
        limit #{startOfPage},#{pageSize}
    </select>

    <sql id="findListForBindLine_where">
        from
        (
            select t.* from
              (
                select t1.* from driver t1
                LEFT JOIN line_driver t2 ON t1.ID=t2.DriverID and t2.GroupID = #{param.groupid}
                where t2.ID is null
              ) t
            LEFT JOIN line_driver t3 ON t.ID=t3.DriverID
            where 1=1
            <if test="param != null">
                <if test="param.keyword != null">
                    and ( t.DName LIKE CONCAT('%',#{param.keyword},'%') or t.DMobile LIKE
                    CONCAT('%',#{param.keyword},'%'))
                </if>
                <if test="param.type == 1">
                    and t3.ID is null
                </if>
                <if test="param.type == 2">
                    and ( t3.ID is null or t3.Type = '2' )
                </if>
            </if>
            GROUP BY t.ID
        ) t
    </sql>

    <insert id="save" parameterType="Driver">
        insert
        into
        driver
        (
        <include refid="columns"/>
        )
        values
        (
        <include refid="propertys"/>
        )
    </insert>
    <update id="update" parameterType="Driver">
        UPDATE
            driver
        SET
            `ID`         = #{id},
            `DName`      = #{dname},
            `DMobile`    = #{dmobile},
            `IsStop`     = #{isstop},
            `IsStopName` = #{isstopname},
            `IDCard`     = #{idcard},
            `pyname`     = #{pyname},
            `DMobile`    = #{dmobile},
            `tcid`    = #{tcid},
            `companyname`    = #{companyname}
        WHERE
            ID = #{id}
    </update>
    <delete id="delete" parameterType="int">
        DELETE FROM
            driver
        WHERE ID =
              #{id}
    </delete>
    <select id="find" parameterType="java.lang.String" resultMap="result_map">
        SELECT *
        FROM
            driver
        WHERE
            ID = #{id}
    </select>
    <select id="findlist" parameterType="Page" resultMap="result_map">
        select
        *
        from
        driver
        <include refid="findlist_where"></include>
        order by makedate desc
        limit
        #{startOfPage},#{pageSize}
    </select>
    <select id="totalCount" parameterType="Page" resultType="long">
        select
        count(1)
        from
        driver
        <include refid="findlist_where"></include>
    </select>
    <sql id="findlist_where">
        where 1=1
        <if test="param != null and param.dname != null">
            and (
            `DName` like '%${param.dname}%'
            or
            `DMobile` like
            '%${param.dname}%'
            )
        </if>
    </sql>
    <select id="getDriverByKeywords" resultMap="result_map"
            parameterType="map">
        SELECT *
        FROM
            driver
        WHERE
            DName LIKE '%${keywords}%' OR
            PYName LIKE '%${keywords}%' OR ID LIKE '%${keywords}%' OR
            DMobile LIKE
            '%${keywords}%'
    </select>
    <select id="getAPIStationLogin" parameterType="map" resultMap="result_map">
		select
		*
		from
		driver a
		where
		(a.DMobile=#{mobile[0]} or a.ID=#{mobile[0]}) and
		a.Password=#{password[0]} and a.IsStop = 0 
	</select>
	<update id="setToken" parameterType="map">
		update
		driver
		set
		Token=#{token} where DMobile=#{mobile}
	</update>
	<select id="getDriverByToken" parameterType="java.lang.String"
		resultMap="result_map">
		select
		*
		from
		driver
		where
		Token=#{token}
	</select>
    <sql id="columns">
        `ID`,
        `pyname`,
        `DName`,
        `DMobile`,
        `Password`,
        `Token`,
        `isStop`,
        `IsStopName`,
        `IDCard`,
        `MakeDate`,
        tcid,
        companyname
    </sql>
    <sql id="propertys">
        #{id},
        #{pyname},
        #{dname},
        #{dmobile},
        #{password},
        #{token},
        #{isstop},
        #{isstopname},
        #{idcard},
        #{makedate},
        #{tcid},
        #{companyname}
    </sql>
    <resultMap id="result_map" type="Driver">
        <id column="ID" property="id" javaType="java.lang.String"/>
        <result column="DName" property="dname" javaType="java.lang.String"/>
        <result column="DMobile" property="dmobile" javaType="java.lang.String"/>
        <result column="Password" property="password" javaType="java.lang.String"/>
        <result column="Token" property="token" javaType="java.lang.String"/>
        <result column="isStop" property="isstop"/>
        <result column="isStopName" property="isstopname" javaType="java.lang.String"/>
        <result column="IDCard" property="idcard" javaType="java.lang.String"/>
        <result column="MakeDate" property="makedate" javaType="java.lang.String"/>
        <result column="pyname" property="pyname" javaType="java.lang.String"/>
        <result column="tcid" property="tcid" javaType="java.lang.Integer"/>
        <result column="companyname" property="companyname" javaType="java.lang.String"/>
    </resultMap>
</mapper>
