<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hengyu.ticket.dao.TicketLineDao">
	<insert id="save" parameterType="TicketLine">
		insert
		into
		ticket_line
		(
		<include refid="columns" />
		)
		values
		(
		<include refid="propertys" />
		)
	</insert>
	<insert id="batchSave" parameterType="list">
		insert
		into
			ticket_line
			(<include refid="columns"/>)
		values
		<foreach item="i" collection="list" index="index" separator=",">
			(<include refid="batch_propertys"/>)
		</foreach>
	 </insert>
	<update id="update" parameterType="TicketLine">
		update
		ticket_line
		set
		`LMID`=#{lmid},
		`LineName`=#{linename},
		`ShiftCode`=#{shiftcode},
		`CityStartID`=#{citystartid},
		`OriginStartTime`=#{originstarttime},
		`STStartID`=#{ststartid},
		`STStartName`=#{ststartname},
		`CityArriveID`=#{cityarriveid},
		`STArriveID`=#{starriveid},
		`STArriveName`=#{starrivename},
		`StartTime`=#{starttime},
		`ArriveTime`=#{arrivetime},
		`TicketPrice`=#{ticketprice},
		`TransCompany`=#{transcompany},
		`TicketDate`=#{ticketdate},
		`MakeDate`=#{makedate},
		`mileage`=#{mileage},
		`favprice`=#{favprice}
		where
		ID=#{id}
	</update>
	<update id="updateprice" parameterType="TicketLine">
		update
			ticket_line
		set
			`TicketPrice`=#{ticketprice}
		where
			ID=#{id}
	</update>
	<update id="cancelTicketLine" parameterType="map">
		update
			ticket_line
		set
			`IsApprove`= 0
		where
			ID 
		in(
			select ID from ticket_line where ShiftCode=#{shiftcode} and lmid=#{lmid} and TicketDate=#{ridedate}
		)
	</update>
	<select id="find" parameterType="java.lang.Integer" resultMap="result_map">
		select
		*
		from
		ticket_line
		where
		ID=#{id}
  </select>
  <select id="findTicketList" resultType="map" parameterType="page">
  		SELECT
			tl.id,
			c1.cityname as ststartname,
			tl.ststartid,
			c2.cityname as starrivename,
			tl.starriveid,
			tl.starttime,
			tl.arrivetime,
			c.shortname as transcompany,
			tl.ticketprice,
			tl.lmid,
			s.linename,
			tl.favprice,
			ts.allquantity,
	  		ifnull(ts.lockquantity,0) lockquantity,
			s.shiftcode,
			ifnull(ts.balancequantity,0) as balancequantity,
			ifnull(ts.balancecouponquantity,0) as balancecouponquantity,
			s.RideDate as ticketdate,
			lm.carmodelname,
			lm.carmodelid,
			ifnull(tl.balancequantity,0) as stationquantity,
			ifnull(tl.balancecouponquantity,0) as stationcouponquantity
		FROM
			ticket_line AS tl
	  	join shift as s on s.ID=tl.ShiftID
		join ticket_store as ts on ts.ShiftID = tl.ShiftID
		join line_manage as lm on lm.id = ts.lmid
		join company as c on lm.tcid = c.id
		join city_station as c1 on c1.id = tl.ststartid
		join city_station as c2 on c2.id = tl.starriveid
		<choose>
			<when test="param!=null and param.id != null">
				where tl.id = #{param.id}
			</when>
			<otherwise>
				<include refid="ticketlist_where"></include>
				<choose>
					<when test="param!=null and param.ticketprice == 1">
						ORDER BY tl.favprice desc
					</when>
					<when test="param!=null and param.ticketprice == 0">
						ORDER BY tl.favprice asc
					</when>
					<when test="param!=null and param.time == 1">
						ORDER BY tl.StartTime desc,tl.arrivetime desc
					</when>
					<when test="param!=null and param.time == 0">
						ORDER BY tl.StartTime asc,tl.arrivetime asc
					</when>
					<otherwise>
						ORDER BY tl.StartTime asc
					</otherwise>
				</choose>
			</otherwise>
		</choose>
		LIMIT 
			#{startOfPage},#{pageSize}
  </select>
  <select id="findTicketListCount" resultType="long" parameterType="page">
  		SELECT
			count(1)
		FROM
			ticket_line AS tl
	  	join shift as s on s.ID=tl.ShiftID
		join ticket_store as ts on ts.ShiftID = tl.ShiftID
		join line_manage as lm on lm.id = ts.lmid
		join company as c on lm.tcid = c.id
		join city_station as c1 on c1.id = tl.ststartid
		join city_station as c2 on c2.id = tl.starriveid
		<include refid="ticketlist_where"></include>
  </select>
  
  <select id="findUniqueTicketLine" resultMap="result_map2" parameterType="TicketLine">
  		select
			tl.*
			,<include refid="com.hengyu.ticket.dao.TicketStoreDao.pre_columns"/>
		from
			ticket_line as tl
		inner join
			ticket_store as ts
		on
			ts.lmid = tl.lmid 
		and
			ts.TicketDate = tl.TicketDate
		and 
			ts.ShiftCode = tl.ShiftCode
		where 1=1
		<choose>
			<when test="id!=null">
				and tl.id = #{id}
			</when>
			<otherwise>
				and	tl.lmid = #{lmid} and tl.ShiftCode = #{shiftcode} and tl.STStartID = #{ststartid} 
				and tl.STArriveID = #{starriveid} and tl.TicketDate = #{ticketdate}
			</otherwise>
		</choose>
  </select>
  
  <select id="getCheckApproveTicketDate" resultType="string" parameterType="TicketLine">
  		select
			max(ticketdate)
		from
			ticket_store
		where
			lmid = #{lmid}
		and (
				isapprove = 1
			or
				isrelease = 1
		)
		limit 0,1
  </select>
  <select id="getMaxApproveTicketDate" resultType="java.lang.String" parameterType="TicketLine">
  		select
			max(ticketdate)
		from
			ticket_line
		where
			id = #{lmid}
		and 
			isapprove = 1
  </select>
  
  <delete id="delNotApproveTicketLine" parameterType="TicketLine">
  		delete from 
  			ticket_line
  		where
  			lmid = #{lmid}
  		and
  			TicketDate >= #{ticketdate}
  </delete>
  
  <sql id="ticketlist_where">
	where 1=1
	<if test="param != null">
		<if test=" param.ticketdate != null and param.ticketdate != '' ">
			and s.RideDate = #{param.ticketdate}
		</if>
		<if test="param.cityarriveid != null and param.cityarriveid != '' ">
			and s.cityarriveid = #{param.cityarriveid}
		</if>
		<if test="param.citystartid != null and param.citystartid != '' ">
			and s.citystartid = #{param.citystartid}
		</if>
		<if test="param.iscustomer == 1 ">
<!-- 			and ts.balancequantity <![CDATA[>]]> 0  -->
			and ts.isrelease = 1
		</if>
		<if test="param.istoday == 1 ">
			and tl.starttime <![CDATA[>=]]> #{param.ordertime}
		</if>
		<if test="param.ststartid != null and param.ststartid != '' ">
			and tl.ststartid = #{param.ststartid}
		</if>
		<if test="param.shiftcode != null and param.shiftcode != '' ">
			and s.shiftcode = #{param.shiftcode}
		</if>
		<if test="param.lmid != null and param.lmid != '' ">
			and tl.lmid = #{param.lmid}
		</if>
		<if test="param.starriveid != null and param.starriveid != '' ">
			and tl.starriveid = #{param.starriveid}
		</if>
		<if test="param.starttime != null and param.starttime != '' and param.arrivetime != null and param.arrivetime != '' ">
			and tl.starttime between #{param.starttime} and #{param.arrivetime}
		</if>
	</if>
		
  </sql>
 <select id="getTicketLineByShiftCode" parameterType="map" resultMap="result_map">
		select
		*
		from
		ticket_line
		where
		ShiftCode=#{shiftcode} and TicketDate=#{ticketdate}
  </select>
 <sql id="columns">
	`lmid`,
	`LineName`,
	`ShiftCode`,
	`CityStartID`,
	`OriginStartTime`,
	`STStartID`,
	`STStartName`,
	`CityArriveID`,
	`STArriveID`,
	`STArriveName`,
	`StartTime`,
	`ArriveTime`,
	`TicketPrice`,
	`TransCompany`,
	`TicketDate`,
	`MakeDate`,
	`mileage`,
	`favprice`
 </sql>
 <sql id="columns_pre">
	tl.`ID` as tl_ID ,
	tl.`STStartID` as tl_STStartID ,
	tl.`STStartName` as tl_STStartName ,
	tl.`STArriveID` as tl_STArriveID ,
	tl.`STArriveName` as tl_STArriveName ,
	tl.`StartTime` as tl_StartTime ,
	tl.`ArriveTime` as tl_ArriveTime ,
	tl.`TicketPrice` as tl_TicketPrice ,
	tl.`mileage` as tl_mileage ,
	tl.`favprice` as tl_favprice 
 </sql>
 <sql id="propertys">
	#{lmid},
	#{linename},
	#{shiftcode},
	#{citystartid},
	#{originstarttime},
	#{ststartid},
	#{ststartname},
	#{cityarriveid},
	#{starriveid},
	#{starrivename},
	#{starttime},
	#{arrivetime},
	#{ticketprice},
	#{transcompany},
	#{ticketdate},
	#{makedate},
	#{mileage},
	#{favprice}
 </sql>
 <sql id="batch_propertys">
	#{i.lmid},
	#{i.linename},
	#{i.shiftcode},
	#{i.citystartid},
	#{i.originstarttime},
	#{i.ststartid},
	#{i.ststartname},
	#{i.cityarriveid},
	#{i.starriveid},
	#{i.starrivename},
	#{i.starttime},
	#{i.arrivetime},
	#{i.ticketprice},
	#{i.transcompany},
	#{i.ticketdate},
	#{i.makedate},
	#{i.mileage},
	#{i.favprice}
 </sql>
 <resultMap id="result_map" type="TicketLine">
  <id column="ID" property="id" javaType="java.lang.Integer"/>
  <result column="lmid" property="lmid"/>
  <result column="LineName" property="linename" javaType="java.lang.String"/>
  <result column="ShiftCode" property="shiftcode" javaType="java.lang.String"/>
  <result column="CityStartID" property="citystartid" javaType="java.lang.String"/>
  <result column="OriginStartTime" property="originstarttime" javaType="java.lang.String"/>
  <result column="STStartID" property="ststartid" javaType="java.lang.String"/>
  <result column="STStartName" property="ststartname" javaType="java.lang.String"/>
  <result column="CityArriveID" property="cityarriveid" javaType="java.lang.String"/>
  <result column="STArriveID" property="starriveid" javaType="java.lang.String"/>
  <result column="STArriveName" property="starrivename" javaType="java.lang.String"/>
  <result column="StartTime" property="starttime" javaType="java.lang.String"/>
  <result column="ArriveTime" property="arrivetime" javaType="java.lang.String"/>
  <result column="TicketPrice" property="ticketprice" javaType="java.math.BigDecimal"/>
  <result column="favprice" property="favprice" javaType="java.math.BigDecimal"/>
  <result column="TransCompany" property="transcompany" javaType="java.lang.String"/>
  <result column="TicketDate" property="ticketdate" javaType="java.lang.String"/>
  <result column="MakeDate" property="makedate" javaType="java.lang.String"/>
  <result column="isapprove" property="isapprove"/>
  <result column="mileage" property="mileage"/>
  <result column="tlsid" property="tlsid"/>
  <result column="salequantity" property="salequantity"/>
  <result column="couponsalequantity" property="couponsalequantity"/> 
 </resultMap>
 <resultMap type="TicketLine" id="result_map2" extends="result_map">
 	<association property="ticketStore" columnPrefix="ts_" resultMap="com.hengyu.ticket.dao.TicketStoreDao.result_map"/>
 </resultMap>
</mapper>
