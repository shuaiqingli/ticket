<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hengyu.ticket.dao.LinePriceDao">
  <insert id="save" parameterType="LinePrice" useGeneratedKeys="true" keyProperty="id" keyColumn="ID">
	insert
	into
		trip_price_rule
		(<include refid="columns"/>)
	values
		(<include refid="propertys"/>)
  </insert>
  <delete id="deleteByNotInIds" parameterType="list">
	delete
	from
		trip_price_rule
	where
		ID 
	not in
	<foreach collection="list" close=")" open="(" separator="," item="i">
		#{i.id}
	</foreach>
	<foreach collection="list" item="i" index="index">
		<if test="index == 0 ">
			and `lmid`=#{i.lmid}
		</if>
	</foreach>
  </delete>
  <update id="update" parameterType="LinePrice">
	update
		trip_price_rule
	set
		`lmid`=#{lmid},
		`LineName`=#{linename},
		`STStartID`=#{ststartid},
		`STStartName`=#{ststartname},
		`STArriveID`=#{starriveid},
		`STArriveName`=#{starrivename},
		`PriceSort`=#{pricesort},
		`mileage`=#{mileage},
		`Price`=#{price}
	where
		ID=#{id}
  </update>
  <update id="updatePrice" parameterType="LinePrice">
	update
		trip_price_rule
	<set>
		`mileage`=#{mileage},
		`Price`=#{price}
	</set>
	where
		ID=#{id}
  </update>
  <select id="find" parameterType="java.lang.Integer" resultMap="result_map">
	select
		*
	from
		trip_price_rule
	where
		ID=#{id}
  </select>
  <select id="findBylmid" parameterType="java.lang.String" resultMap="result_map">
	select
		*
	from
		trip_price_rule
	where
		`lmid`= #{id}
	order by 
		PriceSort
	asc
  </select>
  <sql id="columns">
	`lmid`,
	`mileage`,
	`LineName`,
	`STStartID`,
	`STStartName`,
	`STArriveID`,
	`STArriveName`,
	`PriceSort`,
	`Price`
  </sql>
  <sql id="pre_columns">
  	lp.`ID` as lp_ID,
  	lp.`Mileage` as lp_Mileage,
	lp.`lmid` as lp_lmid,
	lp.`Mileage` as lp_Mileage,
	lp.`LineName` as lp_LineName,
	lp.`STStartID` as lp_STStartID,
	lp.`STStartName` as lp_STStartName,
	lp.`STArriveID` as lp_STArriveID,
	lp.`STArriveName` as lp_STArriveName,
	lp.`Price` as lp_Price
  </sql>
  <sql id="propertys">
	#{lmid},
	#{mileage},
	#{linename},
	#{ststartid},
	#{ststartname},
	#{starriveid},
	#{starrivename},
	#{pricesort},
	#{price}
  </sql>
  <resultMap id="result_map" type="LinePrice">
    <id column="ID" property="id" javaType="java.lang.Integer"/>
    <result column="lmid" property="lmid" />
    <result column="LineName" property="linename" javaType="java.lang.String"/>
    <result column="STStartID" property="ststartid" javaType="java.lang.String"/>
    <result column="STStartName" property="ststartname" javaType="java.lang.String"/>
    <result column="STArriveID" property="starriveid" javaType="java.lang.String"/>
    <result column="STArriveName" property="starrivename" javaType="java.lang.String"/>
    <result column="Mileage" property="mileage" />
    <result column="PriceSort" property="pricesort"/>
    <result column="Price" property="price" javaType="java.math.BigDecimal"/>
  </resultMap>
</mapper>
