<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hengyu.ticket.dao.CustomerDao">
	<select id="findIntegralLineList" resultType="java.util.HashMap">
		select * from integral_line where CustomerID=#{cid} order by MakeDate desc
	</select>

	<select id="findCouponList" resultType="java.util.HashMap">
		select t1.*,t2.ID as OrderIDForUse from coupons t1
		LEFT JOIN sale_order t2 on t1.VoucherCode=t2.Coupons and t2.PayStatus=1
		where t1.CID=#{cid} order by t1.IsUse desc, t1.EndDate desc
	</select>

	<select id="findCustomerByAdmin" resultMap="result_map">
		select * from customer where UserID=#{userid} and Rank=2
	</select>
	
	<select id="findCustomerTotalForSelect" resultType="long">
		select count(1)
		<include refid="findCustomerListForSelect_where"/>
	</select>

	<select id="findCustomerListForSelect" resultMap="result_map">
		select *
		<include refid="findCustomerListForSelect_where"/>
		order by MakeDate desc
		limit #{page.startOfPage},#{page.pageSize}
	</select>

	<sql id="findCustomerListForSelect_where">
		from customer where 1=1
		<if test="keyword != null">
			and ( `Mobile` like CONCAT('%',#{keyword},'%') or `CName` like CONCAT('%',#{keyword},'%') )
		</if>
	</sql>

	<update id="updateCustomerRank">
		update customer set Rank=#{rank}
		<if test="rank != 2">,UserID = NULL ,UserName = NULL </if>
		where CID=#{cid}
	</update>
	<update id="bindAdminToCustomer">
		update customer set UserID=#{userid}, UserName=#{username} where CID=#{cid} and Rank=2
	</update>
	<select id="findCustomerList" resultType="java.util.HashMap">
		select *
		<include refid="findCustomerList_where"/>
		order by MakeDate desc
		limit #{page.startOfPage},#{page.pageSize}
	</select>
	<select id="findCustomerTotal" resultType="long">
		select count(1)
		<include refid="findCustomerList_where"/>
	</select>
	<sql id="findCustomerList_where">
		from
		(
		select count(t2.ID) OrderTotal,t1.* from customer t1
		LEFT JOIN sale_order t2 ON t1.CID=t2.CID and t2.PayStatus=1 and t2.Status <![CDATA[ < ]]> 2
		where 1=1
		<if test="customer != null">
			<if test="customer.cname != null">
				and (t1.`Mobile` like CONCAT('%',#{customer.cname},'%') or t1.`CName` like CONCAT('%',#{customer.cname},'%'))
			</if>
			<if test="customer.rank != null">
				and t1.`Rank`=#{customer.rank}
			</if>
			<if test="customer.startDate != null and customer.startDate != ''">
				and t1.MakeDate >= #{customer.startDate}
			</if>
			<if test="customer.endDate != null and customer.endDate != ''">
				and t1.MakeDate <![CDATA[ <= ]]> #{customer.endDate}
			</if>
		</if>
		GROUP BY t1.CID
		) t
	</sql>
	
  <insert id="save" parameterType="Customer">
	insert
	into
		customer
		(<include refid="columns"/>)
	values
		(<include refid="propertys"/>)
  </insert>
  <update id="update" parameterType="Customer">
	update
		customer
	set
		`CID`=#{cid},
		`Mileage`=#{mileage},
		`Mobile`=#{mobile},
		`CName`=#{cname},
		`Email`=#{email},
		`Password`=#{password},
		`Token`=#{token},
		`Money`=#{money},
		`MakeDate`=#{makeDate},
		`HeadPhoto`=#{headphoto},
		`OpenId`=#{openid},
		`Integral`=#{integral}
	where
		CID=#{cid}
  </update>
  <select id="findByMobile" parameterType="java.lang.String" resultMap="result_map">
	select
		*
	from
		customer
	where
		Mobile=#{mobile}
  </select>
  <select id="find" parameterType="java.lang.String" resultMap="result_map">
	select
		*
	from
		customer
	where
		cid=#{cid}
  </select>
  <select id="login" resultMap="result_map">
	select
		*
	from
		customer
	where 1 = 1
	<choose>
		<when test="openid!=null and openid!='' ">
			and	openid=#{openid}
		</when>
		<otherwise>
			and	mobile=#{mobile} and password=#{password}
		</otherwise>
	</choose>
  </select>
  <select id="findByToken" parameterType="java.lang.String" resultMap="result_map">
	select
		*
	from
		customer
	where
		`Token`=#{token}
  </select>
  <sql id="columns">
	`CID`,
	`Mileage`,
	`Mobile`,
	`CName`,
	`Email`,
	`Password`,
	`Token`,
	`Money`,
	`MakeDate`,
	`HeadPhoto`,
	`OpenId`,
	`Integral`,
	lat,
	lng,
	regaddr
  </sql>
  <sql id="propertys">
	#{cid},
	#{mileage},
	#{mobile},
	#{cname},
	#{email},
	#{password},
	#{token},
	#{money},
	#{makeDate},
	#{headphoto},
	#{openid},
	#{integral},
	#{lat},
	#{lng},
	#{regaddr}
  </sql>
  <resultMap id="result_map" type="Customer">
    <id column="CID" property="cid" />
    <result column="Mobile" property="mobile" />
    <result column="CName" property="cname" />
    <result column="Email" property="email" />
    <result column="Password" property="password" />
    <result column="Token" property="token" />
    <result column="Money" property="money" javaType="java.math.BigDecimal"/>
    <result column="MakeDate" property="makeDate" />
    <result column="HeadpHoto" property="headphoto" />
    <result column="OpenId" property="openid" />
    <result column="Mileage" property="mileage" />
	<result column="Integral" property="integral" />
	<result column="Rank" property="rank" />
	<result column="lat" property="lat" />
	<result column="lng" property="lng" />
	<result column="regaddr" property="regaddr" />
  </resultMap>
</mapper>
