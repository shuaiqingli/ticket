<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hengyu.ticket.dao.SaleOrderTicketDao">
	<select id="findSeatNOByRTID" parameterType="java.lang.String" resultType="java.lang.Integer">
	select 
		sot.SeatNO as seat_no
	from 
		sale_order_ticket as sot 
	where 
		checkcode in
			(select checkcode from refund_ticket_detail where rtid=#{rtid})
	</select>
	<select id="findSeatNOAndSeatId" parameterType="java.lang.String" resultType="java.util.HashMap">
		select 
			sot.SeatNO as seat_no,
			sot.SeatID as seat_id 
		from 
			sale_order_ticket as sot 
		where 
			CheckCode=#{checkCode}
	</select>
	<select id="findSeatNOListForLock" resultType="java.util.HashMap">
		select SeatID,SeatNO from sale_order_ticket where ShiftID=#{shiftid} and PayStatus=2
	</select>

	<update id="cancelLockSaleOrderTicketByCheckCode">
		update sale_order_ticket set PayStatus=0, Status=3 where PayStatus=2 and SOID=#{soid}
		<if test="checkcodeListForPay != null">
			and CheckCode not in
			<foreach collection="checkcodeListForPay" item="checkcode" open="(" close=")" separator=",">
				#{checkcode}
			</foreach>
		</if>
	</update>

	<update id="payLockSaleOrderTicketByCheckCode">
		update sale_order_ticket set PayStatus=1 where PayStatus=2 and SOID=#{soid} and CheckCode in
		<foreach collection="checkcodeListForPay" item="checkcode" open="(" close=")" separator=",">
			#{checkcode}
		</foreach>
	</update>

	<update id="updateDateOutOrder">
		update sale_order_ticket set status = 6  where status = 0 and ridedate <![CDATA[ < ]]> CURRENT_DATE() and isontrain = 0
	</update>

	<select id="findSaleOrderTicketListWithoutCheckCode" resultMap="result_map">
		select * from sale_order_ticket where SOID=#{soid}
		<if test="checkcodeList != null">
			and CheckCode not in
			<foreach collection="checkcodeList" item="checkcode" open="(" close=")" separator=",">
				#{checkcode}
			</foreach>
		</if>
	</select>

	<insert id="save" parameterType="SaleOrderTicket">
		insert
		into
		sale_order_ticket
		(
		<include refid="columns" />
		)
		values
		(
		<include refid="propertys" />
		)
	</insert>
	
	<update id="updateRefundStatus">
		update sale_order_ticket set `status`=#{newstatus},paystatus=#{paystatus}
		where CheckCode=#{checkcode} and 
		(PayStatus=1 or PayStatus=2 ) and
		( `status`= #{oldstatus} or status = 6)
	</update>
	
	<delete id="delete" parameterType="java.lang.String">
		delete
		from
		sale_order_ticket
		where
		CheckCode=#{checkcode}
	</delete>
	
	<update id="update" parameterType="SaleOrderTicket">
		update
		sale_order_ticket
		set
		`CheckCode`=#{checkcode},
		`paystatus`=#{paystatus},
		`transcompany`=#{transcompany},
		`seatno`=#{seatno},
		`SOID`=#{soid},
		`TicketCode`=#{ticketcode},
		`LineName`=#{linename},
		`ShiftCode`=#{shiftnum},
		`RideDate`=#{ridedate},
		`StartTime`=#{starttime},
		`Price`=#{price},
		`IsTake`=#{istake},
		`IsTakeName`=#{istakename},
		`TakeDate`=#{takedate},
		`IsOnTrain`=#{isontrain},
		`IsOnTrainName`=#{isontrainname},
		`OnTrainDate`=#{ontraindate},
		ststartid=#{ststartid},
		ststartname=#{ststartname},
		starriveid=#{starriveid},
		`Memo`=#{memo}
		where
		CheckCode=#{checkcode}
	</update>
	<select id="find" parameterType="java.lang.String" resultMap="result_map">
		select
		*
		from
		sale_order_ticket
		where
		CheckCode=#{checkcode}
	</select>
	<select id="getSaleOrderTicketBySOIDTC" parameterType="map"
		resultMap="result_map">
		select
		*
		from
		sale_order_ticket
		<include refid="getTicketWhere"></include>
		and Status=0 
	</select>
	<sql id="getTicketWhere">
		<where>
			1=1
			<if test="id != null and id != '' ">
			and
				SOID=#{id}
			</if>
			<if test="ticketcode != null and ticketcode != '' ">
			and
				TicketCode=#{ticketcode}
			</if>
		</where>
	</sql>
	<select id="getAlreadyTakeBySOID" resultType="long"
		parameterType="map">
		select
		count(*)
		from
		sale_order_ticket
		where IsTake=1 and SOID=#{soid}
	</select>
	<update id="printSaleOrderTicket" parameterType="map">
		update
		sale_order_ticket
		set
		`IsTake`=#{istake},
		`IsTakeName`=#{istakename},
		`TakeDate`=#{takedate},
		<!-- `IsAbnormal`=#{isabnormal}, -->
		`Memo`=#{memo},
		<!-- `GetWay`='0' -->
		where
		CheckCode=#{checkcode} and Status=0
	</update>
	<select id="findTicketPrint" parameterType="map" resultMap="result_map">
		select so.ShiftCode,
		so.ridedate,so,
		linename,
		so.price,
		so.id,
		sot.checkcode,
		sot.istakename
		from sale_order as so,
		sale_order_ticket as
		sot
		where so.id=sot.soid
		and sot.checkcode=#{checkcode}
	</select>
	<select id="constrastTicket" parameterType="map" resultMap="result_map">
		select
		*
		from
		sale_order_ticket
		where
		CheckCode=#{checkcode} and
		ShiftCode=#{shiftnum} and RideDate=#{ridedate} and IsOnTrain=0
	</select>
	<update id="checkTicket" parameterType="map">
		update
		sale_order_ticket
		set
		`IsOnTrain`=1,
		`IsOnTrainName`='已上车',
		`OnTrainDate`=#{currdate}
		where
		CheckCode=#{checkcode} and ShiftCode=#{shiftnum} and
		RideDate=#{ridedate}
	</update>
	<select id="getNoOnTrain" resultType="long" parameterType="map">
		select
		count(*)
		from
		sale_order_ticket
		where IsOnTrain=0 and ShiftCode=#{shiftcode} and STStartID=#{ststartid} and
		RideDate=#{ridedate} and PayStatus=1 and Status=0
	</select>
	<select id="getAlreadyOnTrain" resultType="long" parameterType="map">
		select
		count(*)
		from
		sale_order_ticket
		where IsOnTrain=1 and TicketCode=#{ticketcode} and PayStatus=1
	</select>
	<update id="saleorderCheck" parameterType="map">
		update
		sale_order_ticket
		set
		`IsOnTrain`=1,
		`IsOnTrainName`='已上车',
		`OnTrainDate`=#{currdate}
		where
		TicketCode=#{ticketcode} and ShiftCode=#{shiftnum} and Status=0
	</update>
	<update id="abnormalUpdateShiftNum" parameterType="map">
		update
		sale_order_ticket
		set
		`ShiftCode`=#{shiftnum},
		`Memo`='改签了班次上车',
		`IsOnTrain`=1,
		`IsOnTrainName`='已上车',
		`OnTrainDate`=#{currdate}
		where
		CheckCode = #{checkcode} 
	</update>
	<update id="abnormalUpdateShiftNumByTicketCode" parameterType="map">
		update
		sale_order_ticket
		set
		`ShiftCode`=#{shiftnum},
		`Memo`='改签了班次上车',
		`IsOnTrain`=1,
		`IsOnTrainName`='已上车',
		`OnTrainDate`=#{currdate}
		where
		TicketCode = #{ticketcode} 
	</update>
	
	<update id="ticketRefundBySOID" parameterType="map">
		update
		sale_order_ticket
		set
		Status=3
		where
		SOID = #{soid} 
	</update>
	<update id="ticketDealByCheckCode" parameterType="map">
		update
		sale_order_ticket
		set
		Status=#{status},
		PayStatus= #{paystatus},
		SID= #{sid},
		SName=#{sname},
		SDate=#{sdate}
		where
		CheckCode = #{checkcode} 
	</update>
	<select id="getValidateTicketCountBySOID" resultType="int"
		parameterType="map">
		select
		count(*)
		from
		sale_order_ticket
		<include refid="getValidateWhere"></include>
	</select>
	<sql id="getValidateWhere">
		where 1=1
		<if test="soid != null and soid != '' ">
			and SOID=#{soid}
		</if>
		<if test="ticketcode != null and ticketcode != '' ">
			and TicketCode=#{ticketcode}
		</if>
		and Status=0 
	</sql>
	<select id="getSoldQuantity" resultType="long"
		parameterType="map">
		select 
			 IFNULL(sum(so.Quantity),0) as quantity
		from 
			sale_order as so
		where 
			so.shiftid=#{shiftID}
		and 
			so.shiftcode=(select ShiftCode from shift where id=#{shiftID}) 
		and 
			so.RideDate=#{ticketdate}
		and 
			so.STStartID=#{stid}
		<if test="lmid != null and lmid != '' ">
		and
			so.LMID=#{lmid}
		</if>
		and 
			so.PayStatus=1
	</select>
	<select id="findBySaleOrderId" resultMap="result_map">
		select * from sale_order_ticket where soid = #{soid}
	</select>
	
	<select id="findByCheckCode" resultMap="result_map">
		select * from sale_order_ticket where CheckCode = #{checkCode}
	</select>
	
	<sql id="columns">
		`CheckCode`,
		`transcompany`,
		`seatno`,
		`paystatus`,
		`SOID`,
		`TicketCode`,
		`LineName`,
		`ShiftCode`,
		`RideDate`,
		`StartTime`,
		`Price`,
		`vprice`,
		`IsTake`,
		`IsTakeName`,
		`TakeDate`,
		`IsOnTrain`,
		`IsOnTrainName`,
		`OnTrainDate`,
		`Memo`,
		ststartid,
		ststartname,
		starriveid,
		isdiscount,
		seatid,
		lmid,
		shiftid,
		starrivename
	</sql>
	<sql id="propertys">
		#{checkcode},
		#{transcompany},
		#{seatno},
		#{paystatus},
		#{soid},
		#{ticketcode},
		#{linename},
		#{shiftnum},
		#{ridedate},
		#{starttime},
		#{price},
		#{vprice},
		#{istake},
		#{istakename},
		#{takedate},
		#{isontrain},
		#{isontrainname},
		#{ontraindate},
		#{memo},
		#{ststartid},
		#{ststartname},
		#{starriveid},
		#{isdiscount},
		#{seatid},
		#{lmid},
		#{shiftid},
		#{starrivename}
	</sql>
	<resultMap id="result_map" type="SaleOrderTicket">
		<id column="CheckCode" property="checkcode"  />
		<result column="SOID" property="soid"  />
		<result column="TicketCode" property="ticketcode"  />
		<result column="LineName" property="linename"  />
		<result column="ShiftCode" property="shiftnum"  />
		<result column="RideDate" property="ridedate"  />
		<result column="StartTime" property="starttime"  />
		<result column="Price" property="price" javaType="java.math.BigDecimal" />
		<result column="vprice" property="vprice" javaType="java.math.BigDecimal" />
		<result column="IsTake" property="istake" javaType="java.lang.Integer" />
		<result column="IsTakeName" property="istakename"  />
		<result column="TakeDate" property="takedate"  />
		<result column="seatid" property="seatid" javaType="java.lang.Integer" />
		<result column="isdiscount" property="isdiscount" javaType="java.lang.Integer" />
		<result column="IsOnTrain" property="isontrain" javaType="java.lang.Integer" />
		<result column="IsOnTrainName" property="isontrainname"/>
		<result column="OnTrainDate" property="ontraindate"  />
		<result column="Memo" property="memo"  />
		<result column="STArriveName" property="starrivename"  />
		<result column="seatno" property="seatno" />
		<result column="status" property="status" />
		<result column="paystatus" property="paystatus" />
		<result column="transcompany" property="transcompany"  />
		<result column="lmid" property="lmid"  />
		<result column="sdate" property="sdate"  />
		<result column="sid" property="sid"  />
		<result column="sname" property="sname"  />
		<result column="shiftid" property="shiftid"  />
	</resultMap>
</mapper>
