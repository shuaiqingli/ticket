<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hengyu.ticket.dao.TripPriceListDao">
  <insert id="save" parameterType="TripPriceList" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
	insert
	into
		trip_price_list
		(<include refid="columns"/>)
	values
		(<include refid="propertys"/>)
  </insert>

  <delete id="delete">
      delete from trip_price_list where
      <if test="id!=null">
          ID = #{id}
      </if>
      <if test="lrid!=null">
          strid = #{lrid}
      </if>
  </delete>

  <delete id="deleteTripPriceSub">
      DELETE FROM trip_price_sub
      WHERE
      <if test="tplid != null">
          tprid=#{tplid}
      </if>
      <if test="lrid != null">
          tprid IN ( SELECT id FROM trip_price_list WHERE strid =  #{lrid} ) ;
      </if>
  </delete>
  <update id="update" parameterType="TripPriceList">
	update
		trip_price_list
	set
		`TPLName`=#{tplname},
		`LMID`=#{lmid},
		`STRID`=#{strid},
		`TicketQuantity`=#{ticketquantity},
		`IsStart`=#{isstart},
		`CouponTicketQuantity`=#{couponticketquantity},
		`LockQuantity`=#{lockquantity},
		`StartSeat`=#{startseat},
		`Isdefault`=#{isdefault}
	where
		ID=#{id}
  </update>
  <update id="resetDefault" parameterType="int">
	update
		trip_price_list
	set
		`Isdefault`= 0
	where
		LMID=#{lmid} and STRID = #{strid}
  </update>
  <select id="findExistsDate" parameterType="TripPriceList" resultMap="result_map">
	select
		*
	from
		trip_price_list
	where
	lmid = #{lmid}
	<if test="isforever==null or isforever==0">
		and(
			#{begindate} between BeginDate and EndDate
			or
			#{enddate} between BeginDate and EndDate
		)
	</if>
	<if test="id!=null">
		and id not in(#{id})
	</if>
	<if test="isforever!=null">
		and isforever = #{isforever}
	</if>
	limit 0,1
  </select>

  <select id="find" parameterType="java.lang.Integer" resultMap="result_map3">
	select * from trip_price_list where ID = #{id}
  </select>

  <select id="findTripPriceSub" parameterType="java.lang.Integer" resultMap="com.hengyu.ticket.dao.TripPriceSubDao.result_map">
	select * from trip_price_sub where tprid = #{tprid} order by ststartid
  </select>

  <select id="findlist" resultMap="result_map2" parameterType="Page">
	select
		tpl.*,sum(tpr.weekday) as weekday
	from
		trip_price_list as tpl
	left join trip_price_rule as tpr on tpr.tplid = tpl.id
	<include refid="findlist_where"></include>
	group by 
		tpl.id
	order by
		begindate asc,IsForever asc
	limit #{startOfPage},#{pageSize}
  </select>
  
  <select id="findByTicketStore" parameterType="TicketStore" resultMap="result_map2">
  	select tpl.* from trip_price_list as tpl
  </select>
  
  <select id="count" resultType="long" parameterType="Page">
	select
		count(1)
	from
		trip_price_list
	<include refid="findlist_where"></include>
  </select>
  
  <select id="findWeekdayByTripPrice" parameterType="TripPriceRule" resultMap="result_map">
	select
		sum(weekday) as weekday
	from
		trip_price_rule
	where 
		tplid = #{tplid}
	<if test="id != null ">
		and id not in(#{id})
	</if>
  </select>
  
   <select id="findisAllowUpdateLineManage" resultType="int" parameterType="int">
   		select 
   			if(count(1) = 0 or count(1) is null,1,0)
   		from 
   			trip_price_list
   		where 
   			lmid = #{lmid} and EndDate >= current_date()
   </select>

    <select id="findByLMID" resultMap="result_map2">
      SELECT tpl.*,str.rulename as strname
      FROM trip_price_list as tpl
      JOIN station_time_rule as str  on str.id = tpl.strid
      WHERE tpl.lmid = #{lmid}
      ORDER BY tpl.strid,tpl.isdefault desc
    </select>

    <select id="findByStrID" resultMap="result_map2">
      SELECT tpl.*,str.rulename as strname
      FROM trip_price_list as tpl
      JOIN station_time_rule as str  on str.id = tpl.strid
      WHERE tpl.strid = #{strid}
      ORDER BY tpl.isdefault desc
    </select>

    <select id="getDifferStation" resultMap="com.hengyu.ticket.dao.LineManageStationDao.result_map">
        select distinct sort,lmid,stid,stname from line_manage_station where strid in (
        select id from station_time_rule where groupid = #{lrid}
        ) and stid not in (
        select
        distinct tps.ststartid
        from
        trip_price_sub as tps
        where tprid = #{tplid}
        union
        select
        distinct tps.starriveid
        from
        trip_price_sub as tps
        where tprid = #{tplid}
        )
        order by sort
    </select>


    <sql id="findlist_where">
  	where 
  		lmid = #{param.lmid}
  	and(
  		enddate >= CURRENT_DATE()
  	or
  		isforever = 1
  	)
  </sql>

    <sql id="columns">
        `isdefault`,
        `TPLName`,
        `LMID`,
        `STRID`,
        `TicketQuantity`,
        `IsStart`,
        `CouponTicketQuantity`,
        `LockQuantity`,
        `StartSeat`
    </sql>
    <sql id="propertys">
        #{isdefault},
        #{tplname},
        #{lmid},
        #{strid},
        #{ticketquantity},
        #{isstart},
        #{couponticketquantity},
        #{lockquantity},
        #{startseat}
    </sql>
    <resultMap id="result_map" type="TripPriceList">
        <id column="ID" property="id" javaType="java.lang.Integer"/>
        <result column="TPLName" property="tplname" javaType="java.lang.String"/>
        <result column="LMID" property="lmid" javaType="java.lang.Integer"/>
        <result column="STRID" property="strid" javaType="java.lang.Integer"/>
        <result column="TicketQuantity" property="ticketquantity" javaType="java.lang.Integer"/>
        <result column="IsStart" property="isstart" javaType="java.lang.Integer"/>
        <result column="CouponTicketQuantity" property="couponticketquantity" javaType="java.lang.Integer"/>
        <result column="LockQuantity" property="lockquantity" javaType="java.lang.Integer"/>
        <result column="StartSeat" property="startseat" javaType="java.lang.Integer"/>
        <result column="strname" property="strname" javaType="java.lang.String"/>
        <result column="isdefault" property="isdefault" javaType="java.lang.Integer"/>
    </resultMap>
  
   <resultMap type="TripPriceList" id="result_map2" extends="result_map">
  	<collection property="differStations" column="{tplid=id,lrid=strid}" select="getDifferStation"></collection>
  </resultMap>

   <resultMap type="TripPriceList" id="result_map3" extends="result_map">
  	<collection property="tps" column="id" select="findTripPriceSub"></collection>
  </resultMap>

</mapper>
